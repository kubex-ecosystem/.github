{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_9e72d27f.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_9e72d27f-module__JKMi0a__className\",\n  \"variable\": \"inter_9e72d27f-module__JKMi0a__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_9e72d27f.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22],%22variable%22:%22--font-inter%22}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/src/context/ThemeContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx <module evaluation>\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8DACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,8DACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/src/context/ThemeContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx\",\n    \"ThemeProvider\",\n);\nexport const useTheme = registerClientReference(\n    function() { throw new Error(\"Attempted to call useTheme() from the server but useTheme is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/ThemeContext.tsx\",\n    \"useTheme\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,0CACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,0CACA","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/src/context/LanguageContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageProvider() from the server but LanguageProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/LanguageContext.tsx <module evaluation>\",\n    \"LanguageProvider\",\n);\nexport const useLanguage = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLanguage() from the server but useLanguage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/LanguageContext.tsx <module evaluation>\",\n    \"useLanguage\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iEACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,iEACA","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/src/context/LanguageContext.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const LanguageProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call LanguageProvider() from the server but LanguageProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/LanguageContext.tsx\",\n    \"LanguageProvider\",\n);\nexport const useLanguage = registerClientReference(\n    function() { throw new Error(\"Attempted to call useLanguage() from the server but useLanguage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/context/LanguageContext.tsx\",\n    \"useLanguage\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA;AAEG,MAAM,cAAc,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,6CACA","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/src/app/layout.tsx"],"sourcesContent":["import React from 'react';\nimport { Inter } from 'next/font/google';\nimport { ThemeProvider } from '../context/ThemeContext';\nimport { LanguageProvider } from '../context/LanguageContext';\nimport './globals.css';\n\n// import { metadata } from '../data/metadata';\n\nconst inter = Inter({\n  subsets: ['latin'],\n  variable: '--font-inter',\n});\n\nexport const font = inter.variable; // Export the Inter font variable for use in styles\nexport const fontFamily = inter.style.fontFamily; // Export the font family for use in styles\nexport const fontClass = inter.className; // Export the font class for use in styles\nexport const fontVariable = inter.variable; // Export the font variable for use in styles\nexport const fontStyle = inter.style; // Export the font style for use in styles\nexport const fontWeight = inter.style.fontWeight; // Export the font weight for use in styles\n\n/**\n * Root layout for the application.\n * This layout wraps the entire application and provides global styles and context providers.\n *\n * @param {Object} props - The properties passed to the component.\n * @param {React.ReactNode} props.children - The child components to be rendered within this layout.\n * @returns {JSX.Element} The root layout component.\n */\n// How to use the metadata in the layout\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"pt-BR\" suppressHydrationWarning>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n        <meta name=\"theme-color\" content=\"#ffffff\" /> \n        \n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n              (function() {\n                try {\n                  const theme = localStorage.getItem('theme');\n                  if (theme === 'dark' || theme === 'light') {\n                    document.documentElement.classList.add(theme);\n                  } else {\n                    const systemPrefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n                    const defaultTheme = systemPrefersDark ? 'dark' : 'light';\n                    document.documentElement.classList.add(defaultTheme);\n                    localStorage.setItem('theme', defaultTheme);\n                  }\n                } catch (e) {\n                  document.documentElement.classList.add('light');\n                }\n              })()\n            `,\n          }}\n        />\n      </head>\n      <body className={`${inter.variable} font-sans`}>\n        <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-QK23V83HGE\"></script>\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n            window.dataLayer = window.dataLayer || [];\n            function gtag(){dataLayer.push(arguments);}\n            gtag('js', new Date());\n            gtag('config', 'G-QK23V83HGE');\n          `\n          }}\n        />\n        <LanguageProvider>\n          <ThemeProvider>\n            {children}\n          </ThemeProvider>\n        </LanguageProvider>\n      </body>\n    </html>\n  );\n}\n\n// Uncomment the following code if you want to use a different structure for the RootLayout\n// export default function RootLayout({\n//   children,\n// }: {\n//   children: React.ReactNode;\n// }) {\n//   return (\n//     <html lang=\"pt-BR\" suppressHydrationWarning>\n//         <body className={inter.className}>\n//             <ThemeProvider>\n//               {children}\n//             </ThemeProvider>\n//         </body>\n//     </html>\n//   );\n// }"],"names":[],"mappings":";;;;;;;;;;;AAEA;AACA;;;;;;AAUO,MAAM,OAAO,yIAAA,CAAA,UAAK,CAAC,QAAQ,EAAE,mDAAmD;AAChF,MAAM,aAAa,yIAAA,CAAA,UAAK,CAAC,KAAK,CAAC,UAAU,EAAE,2CAA2C;AACtF,MAAM,YAAY,yIAAA,CAAA,UAAK,CAAC,SAAS,EAAE,0CAA0C;AAC7E,MAAM,eAAe,yIAAA,CAAA,UAAK,CAAC,QAAQ,EAAE,6CAA6C;AAClF,MAAM,YAAY,yIAAA,CAAA,UAAK,CAAC,KAAK,EAAE,0CAA0C;AACzE,MAAM,aAAa,yIAAA,CAAA,UAAK,CAAC,KAAK,CAAC,UAAU,EAAE,2CAA2C;AAW9E,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;QAAQ,wBAAwB;;0BACzC,8OAAC;;kCACC,8OAAC;wBAAK,SAAQ;;;;;;kCACd,8OAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,8OAAC;wBAAK,MAAK;wBAAc,SAAQ;;;;;;kCAEjC,8OAAC;wBACC,yBAAyB;4BACvB,QAAQ,CAAC;;;;;;;;;;;;;;;;YAgBT,CAAC;wBACH;;;;;;;;;;;;0BAGJ,8OAAC;gBAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,UAAU,CAAC;;kCAC5C,8OAAC;wBAAO,KAAK;wBAAC,KAAI;;;;;;kCAClB,8OAAC;wBACC,yBAAyB;4BACvB,QAAQ,CAAC;;;;;UAKX,CAAC;wBACD;;;;;;kCAEF,8OAAC,kIAAA,CAAA,mBAAgB;kCACf,cAAA,8OAAC,+HAAA,CAAA,gBAAa;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAMb,EAEA,2FAA2F;CAC3F,uCAAuC;CACvC,cAAc;CACd,OAAO;CACP,+BAA+B;CAC/B,OAAO;CACP,aAAa;CACb,mDAAmD;CACnD,6CAA6C;CAC7C,8BAA8B;CAC9B,2BAA2B;CAC3B,+BAA+B;CAC/B,kBAAkB;CAClB,cAAc;CACd,OAAO;CACP,IAAI","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///srv/apps/LIFE/RAFA-MORI/rafa-mori/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}